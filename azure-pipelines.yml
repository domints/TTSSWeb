# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- task: InstallSSHKey@0
  inputs:
    knownHostsEntry: 'vps.dszymanski.pl ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFc+1vWJCOpIkxH300RI7S7ZtkV2PXGytsrjpaFV9dxoLRUGZN8OS7CKYEahC+sneRF6A1keb3mJ42Mr657mZD8='
    sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQBbGJ+friKpM9PkYgMpRfcmukntkvdeHfodK38H3+kYYvx3AiNow2WTpbjjtIsYJyX1WQOJETLh9efAtApNe+H9am2hhpv80/krn8M/CKQqbcwXZioIjolfTh+QF59QP/MPiBtkLqB7oNcPIxM+84jbgJXnb2xQWQMa4OXA6OQXQc+QAj9wdrBg/3l6Go4V3CxQMEMrFsQXChUL2flnesbU/tMs81rFsxTBWQiEjcKbXVbw3DfPs1PeFTEM8ck8WDKloWKbzQIqqImR9B6bCFynp+PuG4JRlBV0VISXBCk5rbyvRTjFgDUwcuosjcRl+SuQZCWBnjJFb0paMjKYiRoP devops-ttss'
    sshKeySecureFile: 'devops-ttss'
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
    npm install
  displayName: 'npm install'
  workingDirectory: TTSSWeb/TTSSWebClient/

- script: ng build --prod
  displayName: 'Build Angular for Prod'
  workingDirectory: TTSSWeb/TTSSWebClient/

- script: dotnet publish -c Release
  displayName: 'dotnet publish Release'
  workingDirectory: TTSSWeb
- script: mkdir -p Output && tar -czf Output/artifact.tar.gz -C TTSSWeb/bin/Release/netcoreapp2.2/publish .
  displayName: 'Move results to Output dir'
- task: CopyFilesOverSSH@0
  inputs:
    sshEndpoint: vps_conn
    sourceFolder: Output
    targetFolder: /home/azure/deploy_temp
    cleanTargetFolder: true
- task: SSH@0
  inputs:
    sshEndpoint: vps_conn
    runOptions: 'script'
    scriptPath: 'azure-publish.sh'
    args: ttssweb